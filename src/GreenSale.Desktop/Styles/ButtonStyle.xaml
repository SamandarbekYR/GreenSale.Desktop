<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:fa="http://schemas.fontawesome.io/icons/">

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="White"
                  />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="White" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="White"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="White"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#ACF3AC"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MinimizedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="MinB"
                            Background="#F2B22D"
                            CornerRadius="10"
                            >
                        <Path Fill="White" Margin="3"
                              Data="{DynamicResource minimized}" Width="15" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MinB" Property="Background" Value="#DEA529"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="MinB" Property="Background" Value="#F2B22D"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MinB" Property="Background" Value="#C49124"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaximizedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="MaxB"
                            Background="#2ABE3E"
                            CornerRadius="10">
                        <Path Fill="White" Margin="5"
                              Data="{DynamicResource maximized}" Width="15" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MaxB" Property="Background" Value="#24A636"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="MaxB" Property="Background" Value="#2ABE3E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MaxB" Property="Background" Value="#219430"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButtun" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="CloseB" 
                            Background="#209240"
                            CornerRadius="10">
                        <Path Fill="White" Margin="6"
                              Data="{DynamicResource close}" Width="15" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CloseB" Property="Background" Value="#209240"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="CloseB" Property="Background" Value="#24A649"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CloseB" Property="Background" Value="#1B7C37"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BackButtun" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="CloseB" 
                            Background="#209240"
                            CornerRadius="10">
                        <Path Fill="White" Margin="6"
                              Data="{DynamicResource back}" Width="15" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CloseB" Property="Background" Value="#209240"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="CloseB" Property="Background" Value="#24A649"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CloseB" Property="Background" Value="#1B7C37"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UpdateButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="CloseB" 
                            Background="#fff"
                            CornerRadius="10">
                        <Path Fill="{DynamicResource FifthTextColor}" Margin="6"
                              Data="{DynamicResource update}" Width="15" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CloseB" Property="Background" Value="#DCDCDC"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="CloseB" Property="Background" Value="#fff"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CloseB" Property="Background" Value="#BBBBBB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StorageUpdateButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="CloseB" 
                            Background="#fff"
                            CornerRadius="10">
                        <Path Fill="{DynamicResource FifthTextColor}" Margin="6"
                              Data="{DynamicResource update}" Width="15" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CloseB" Property="Background" Value="#DCDCDC"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="CloseB" Property="Background" Value="#fff"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CloseB" Property="Background" Value="#BBBBBB"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UserButtun" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="CloseB" 
                            Background="{DynamicResource SecondaryBackground}"
                            CornerRadius="20">
                        <Path Fill="{DynamicResource PrimaryIconColor}" Margin="5"
                              Data="{DynamicResource User}" Width="20" Stretch="Uniform"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Width" Value="190"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="rbMenu" CornerRadius="15">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Path x:Name="icon" Grid.Column="0"
                                  Width="20" Height="20"
                                  Fill="{DynamicResource PrimarytextColor}"
                                  Data="{Binding Tag , RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                  Stretch="Uniform"/>

                            <TextBlock  Grid.Column="1" x:Name="tb"
                                        FontSize="{TemplateBinding FontSize}"
                                        Text="{TemplateBinding Content}"
                                        VerticalAlignment="Center"
                                        FontFamily="Arial"
                                        Foreground="{DynamicResource PrimarytextColor}"/>
                        </Grid>    
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="rbMenu" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rbMenu" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                            <Setter TargetName="tb" Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource SecondaryTextColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="rbMenu" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource SecondaryTextColor}"/>
                            <Setter TargetName="tb" Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value> 
        </Setter>
    </Style>

    <Style x:Key="SuccessButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="28"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource SecondaryBorderColor}">
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#219241"/>
                                <GradientStop Color="#209240"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Label FontSize="24"
                               x:Name="lbSucses"
                               Margin="10 0"
                               FontFamily="send-series"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="white"/>
                            <Setter TargetName="lbSucses" Property="Foreground" Value="green"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#209240"/>
                            <Setter TargetName="lbSucses" Property="Foreground" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#1B7C37"/>
                            <Setter TargetName="lbSucses" Property="Foreground" Value="white"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SignSuccessButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="350"/>
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    
                    <Border x:Name="sgnBr" CornerRadius="28"
                            BorderThickness="2"
                            BorderBrush="#24A649">
                        <!-- Spinner -->
                        <StackPanel Orientation="Horizontal">
                        <fa:ImageAwesome x:Name="loader"
                                    Icon="Spinner"
                                    Visibility="Collapsed"
                                    Spin="True"
                                    Height="50"
                                    Width="50"
                                    Margin="150 0 0 0"
                                    Foreground="Green"/>
                        <Label FontSize="24"
                               Margin="150 0"
                               x:Name="sgn_label"
                               FontFamily="send-series"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                        </StackPanel>
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#219241"/>
                                <GradientStop Color="#209240"/>
                            </LinearGradientBrush>
                        </Border.Background>
                       
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="sgnBr" Property="Background" Value="white"/>
                            <Setter TargetName="sgn_label" Property="Foreground" Value="green"/>
                            <Setter TargetName="loader" Property="Foreground" Value="#24A649"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="sgnBr" Property="Background" Value="#209240"/>
                            <Setter TargetName="sgn_label" Property="Foreground" Value="white"/>
                            <Setter TargetName="loader" Property="Foreground" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="sgnBr" Property="Background" Value="#209240"/>
                            <!--<Setter TargetName="sgnBr"  Property="Visibility" Value="Collapsed"/>-->
                            <Setter TargetName="sgn_label" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="sgnBr" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="20" Color="LightGreen"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RegisterSuccessButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="350"/>
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="sgnBr" CornerRadius="28"
                            BorderThickness="2"
                            BorderBrush="#24A649">
                        <!-- Spinner -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="5*"/>
                            </Grid.ColumnDefinitions>
                            <fa:ImageAwesome Grid.Column="0"
                                x:Name="loader"
                                    Icon="Spinner"
                                    Visibility="Collapsed"
                                    Spin="True"
                                    Height="50"
                                    Width="80"
                                    Margin="0 0 0 0"
                                    Foreground="White"/>
                            <Label Grid.Column="1"
                                FontSize="24"
                               Margin="25 0 0 0"
                               x:Name="sgn_label"
                               FontFamily="send-series"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Content="{TemplateBinding Content}"
                               />
                        </Grid>
                        <!--<StackPanel Orientation="Horizontal">
                            
                        </StackPanel>-->
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#219241"/>
                                <GradientStop Color="#209240"/>
                            </LinearGradientBrush>
                        </Border.Background>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="sgnBr" Property="Background" Value="white"/>
                            <Setter TargetName="sgn_label" Property="Foreground" Value="green"/>
                            <Setter TargetName="loader" Property="Foreground" Value="green"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="sgnBr" Property="Background" Value="#209240"/>
                            <Setter TargetName="sgn_label" Property="Foreground" Value="white"/>
                            <Setter TargetName="loader" Property="Foreground" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="loader" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="sgnBr" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="20" Color="LightGreen"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SaveBtn" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <!-- Spinner -->
                        <fa:ImageAwesome x:Name="loader"
                                    Icon="Spinner"
                                    Visibility="Collapsed"
                                    Spin="True"
                                    Height="20"
                                    Width="20" />

                        <!-- Button -->
                        <Border x:Name="pictureBorder"
                            CornerRadius="10"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            HorizontalAlignment="Center"
                            Background="{TemplateBinding Background}">
                            <Label x:Name="smaLbl"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="SemiBold"
                               FontSize="16"
                               Foreground="{TemplateBinding Foreground}"
                               Content="{TemplateBinding Content}">
                            </Label>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Your existing triggers -->

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pictureBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}" />
                        </Trigger>

                        <!-- Trigger to show/hide the spinner based on button state -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="loader" Property="Visibility" Value="Visible" />
                            <Setter TargetName="pictureBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="loader" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="pictureBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="categoryButtun" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="250"/>
        <Setter Property="Width" Value="370"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="BorderProduct" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="BorderBrush" Value="GREEN"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ProductButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B"
                            Cursor="Hand"
                            CornerRadius="10">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="44*"/>
                                <RowDefinition Height="56*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0"
                                    BorderThickness="2 2 2 0"
                                    BorderBrush="{DynamicResource SecondaryBorderColor}"
                                    CornerRadius="8 8 0 0"
                                    Background="{DynamicResource SecondaryBackground}">
                                <Border Margin="0" CornerRadius="7 7 0 0">
                                    <Border.Background>
                                        <ImageBrush ImageSource="/Assets/Images/apple-tree-garden-green.jpg"/>
                                    </Border.Background>

                                </Border>
                            </Border>
                            <Border Grid.Row="1"
                                    CornerRadius="0 0 7 7"
                                    BorderThickness="2 0 2 2"
                                    BorderBrush="{DynamicResource SecondaryBorderColor}"
                                    Background="{DynamicResource SecondaryBackground}">
                                <StackPanel>
                                    <Border Height="40"
                                            Margin="10 0 10 0"
                                            BorderThickness="0 0 0 1"
                                            BorderBrush="{DynamicResource SelectedBorderColor}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Column="0" Margin="0 0 0 0"
                                                Orientation="Horizontal">
                                                <Path Width="15" Height="15"
                                                      Margin="0"
                                                      Data="{DynamicResource Location}"
                                                      Stretch="Uniform"
                                                      Fill="{DynamicResource PrimaryBackground}"/>
                                                <TextBlock Text="Andijon"
                                                           Margin="5 0 0 0"
                                                           VerticalAlignment="Center"
                                                           HorizontalAlignment="Center"
                                                           FontSize="14"
                                                           FontFamily="send-series"
                                                           Foreground="{DynamicResource FourthTextColor}"/>
                                            </StackPanel>
                                            <StackPanel Grid.Column="1" Margin="0"
                                            Orientation="Horizontal"
                                            HorizontalAlignment="Right">
                                                <Path Width="15" Height="15"
                                                      Margin="5"
                                                      Data="{DynamicResource Calendar}"
                                                      Stretch="Uniform"
                                                      Fill="{DynamicResource PrimaryBackground}"/>
                                                <TextBlock Text="21-iyun 2021"
                                                           VerticalAlignment="Center"
                                                           HorizontalAlignment="Center"
                                                           FontSize="14"
                                                           FontFamily="send-series"
                                                           Foreground="{DynamicResource FourthTextColor}"/>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0"
                                    Height="35" 
                                    HorizontalAlignment="Left"
                                    Margin="10 0 0 0">
                                            <TextBlock Text="Olma"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="Center"
                                                       FontSize="18"
                                                       FontFamily="send-series"
                                                       Foreground="{DynamicResource FifthTextColor}"/>
                                        </Border>
                                        <StackPanel Grid.Column="1"
                                        Height="35" 
                                        HorizontalAlignment="Right"
                                        Orientation="Horizontal"
                                        Margin="0 0 10 0">
                                            <TextBlock Text="12000"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           FontSize="14"
                                           Margin="0 0 5 0"
                                           FontFamily="send-series"
                                           Foreground="{DynamicResource FifthTextColor}"/>
                                            <TextBlock Text="so'm"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           FontSize="14"
                                           FontFamily="send-series"
                                           Foreground="{DynamicResource FifthTextColor}"/>
                                        </StackPanel>
                                    </Grid>
                                    <Border Height="30" HorizontalAlignment="Left"
                                            Margin="10 0 0 0">
                                        <TextBlock Text="Bog'da semeranka olma navi bor."
                                                   TextWrapping="Wrap"
                                                   Margin="0 0 7 0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontSize="14"
                                                   FontFamily="send-series"
                                                   Foreground="{DynamicResource FourthTextColor}"/>
                                    </Border>
                                    <Border Height="30" HorizontalAlignment="Left"
                                            Margin="10 0 0 0">
                                        <TextBlock Text="15000  kg"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontSize="12"
                                                   FontFamily="send-series"
                                                   Foreground="{DynamicResource FifthTextColor}"/>
                                    </Border>
                                    <Border Height="30" Width="120"
                                            CornerRadius="7"
                                            Margin="10 5 0 0"
                                            HorizontalAlignment="Left"
                                            Background="{DynamicResource SecondaryBackground}"
                                            BorderThickness="1.5"
                                            BorderBrush="{DynamicResource FifthTextColor}">
                                        <Label Content="Read More"
                                               FontSize="12"
                                               Margin="0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               FontFamily="send-series"
                                               Foreground="{DynamicResource FourthTextColor}"/>
                                    </Border>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="BorderThickness" Value="2"/>
                            <Setter TargetName="B" Property="BorderBrush" Value="#049761"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#03774C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SendCodButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="20"
                            BorderThickness="1"
                            BorderBrush="ForestGreen">
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#219241"/>
                                <GradientStop Color="#209240"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Label FontSize="24"
                               x:Name="sendcode_lb"
                               Margin="10 0"
                               FontFamily="send-series"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#24A649"/>
                            <Setter TargetName="sendcode_lb" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="White"/>
                            <Setter TargetName="sendcode_lb" Property="Foreground" Value="#209240"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#1B7C37"/>
                            <Setter TargetName="sendcode_lb" Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProductCreateButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="10" 
                            Background="#209240"
                            Margin="0 5">
                        <Label FontSize="20"
                               Margin="10 0"
                               FontFamily="Jetbrains Mono"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#1D853B"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#209240"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#1B7A36"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProductUpdateButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="5" 
                            Background="#FFD417"
                            Margin="0 5">
                        <Label FontSize="20"
                               Margin="10 0"
                               FontFamily="Jetbrains Mono"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#ECC515"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#FFD417"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#DEB914"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProductDeleteButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="5" 
                            Background="Red"
                            Margin="0 5"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource FifthTextColor}">
                        <Label FontSize="12"
                               Margin="10 0"
                               FontFamily="Jetbrains Mono"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#E10000"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="red"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#D30000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProductBackButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" CornerRadius="5" 
                            Background="Red"
                            Margin="0 5"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource FifthTextColor}">
                        <Label FontSize="20"
                               Margin="10 0"
                               FontFamily="Jetbrains Mono"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#E10000"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="red"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#D30000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AdSellerButton" TargetType="Button">
        <Setter Property="Height" Value="270"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="categoryBorder"
                            CornerRadius="15"              
                            BorderThickness="2"
                            BorderBrush="Transparent"
                            Background="Transparent"
                            Cursor="Hand">
                        <Grid x:Name="categoryGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <Label x:Name="lblAd"                               
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontWeight="SemiBold"
                                       FontSize="25"
                                       Foreground="{DynamicResource FifthTextColor}"                               
                                       Content="{TemplateBinding Content}"
                                       Margin="0 150 0 0"
                                       >
                                </Label>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="E'lon berish"
                                           x:Name="lblAddAd"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Margin="58 0 0 0"
                                           Foreground="{DynamicResource FourthBackground}"
                                       
                                       >
                                    </Label>
                                    <Path x:Name="icon"                                  
                                          Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                          Height="20" Width="20"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"                                  
                                          Fill="{DynamicResource FourthTextColor}"                                  
                                          Stretch="Uniform"/>
                                </StackPanel>
                            </StackPanel>
                            <Border Grid.Column="1" CornerRadius="0 15 15 0">
                                <Border.Background>
                                    <ImageBrush ImageSource="/Assets/Images/Users.png"/>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="categoryBorder" Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="#209240"/>
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource FifthTextColor}"/>
                            <Setter TargetName="lblAd" Property="Foreground" Value="{DynamicResource FifthTextColor}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">


                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="#209240"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AdBuyerButton" TargetType="Button">
        <Setter Property="Height" Value="270"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="categoryBorder"
                            CornerRadius="15"              
                            BorderThickness="2"
                            Background="Transparent"
                            BorderBrush="Transparent">
                        <Grid x:Name="categoryGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <Label x:Name="lblAd"                               
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontWeight="SemiBold"
                                       FontSize="25"
                                       Foreground="{DynamicResource FifthTextColor}"                               
                                       Content="{TemplateBinding Content}"
                                       Margin="0 150 0 0"
                                       >
                                </Label>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="E'lon berish"
                                           x:Name="lblAddAd"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Margin="58 0 0 0"
                                           Foreground="{DynamicResource FourthBackground}"
                                       
                                       >
                                    </Label>
                                    <Path x:Name="icon"                                  
                                          Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                          Height="20" Width="20"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"                                  
                                          Fill="{DynamicResource FourthTextColor}"                                  
                                          Stretch="Uniform"/>
                                </StackPanel>
                            </StackPanel>
                            <Border Grid.Column="1" CornerRadius="0 15 15 0">
                                <Border.Background>
                                    <ImageBrush ImageSource="/Assets/Images/Users.png"/>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="categoryBorder" Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="#209240"/>
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource FifthTextColor}"/>
                            <Setter TargetName="lblAd" Property="Foreground" Value="{DynamicResource FifthTextColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">


                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="#209240"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AdStorageButton" TargetType="Button">
        <Setter Property="Height" Value="270"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="categoryBorder"
                            CornerRadius="15"              
                            BorderThickness="2"
                            Background="Transparent"
                            BorderBrush="Transparent">
                        <Grid x:Name="categoryGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <Label x:Name="lblAd"                               
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontWeight="SemiBold"
                                       FontSize="25"
                                       Foreground="{DynamicResource FifthTextColor}"                               
                                       Content="{TemplateBinding Content}"
                                       Margin="0 150 0 0"
                                       >
                                </Label>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="E'lon berish"
                                           x:Name="lblAddAd"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Margin="58 0 0 0"
                                           Foreground="{DynamicResource FourthBackground}"
                                       
                                       >
                                    </Label>
                                    <Path x:Name="icon"                                  
                                          Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                          Height="20" Width="20"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"                                  
                                          Fill="{DynamicResource FourthTextColor}"                                  
                                          Stretch="Uniform"/>
                                </StackPanel>
                            </StackPanel>
                            <Border Grid.Column="1" CornerRadius="0 15 15 0">
                                <Border.Background>
                                    <ImageBrush ImageSource="/Assets/Images/Users.png"/>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="categoryBorder" Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="#209240"/>
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource FifthTextColor}"/>
                            <Setter TargetName="lblAd" Property="Foreground" Value="{DynamicResource FifthTextColor}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">


                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="#209240"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="saqlsh" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="sgnBr" CornerRadius="28"
                            BorderThickness="2"
                            BorderBrush="#24A649">
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="#219241"/>
                                <GradientStop Color="#209240"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Label FontSize="24"
                               Margin="0 0"
                               x:Name="sgn_label"
                               FontFamily="send-series"
                               FontWeight="SemiBold"
                               Foreground="White"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="sgnBr" Property="Background" Value="white"/>
                            <Setter TargetName="sgn_label" Property="Foreground" Value="#24A649"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="sgnBr" Property="Background" Value="#209240"/>
                            <Setter TargetName="sgn_label" Property="Foreground" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="sgnBr" Property="Background" Value="#209240"/>
                            <Setter TargetName="sgn_label" Property="Foreground" Value="white"/>
                            <Setter TargetName="sgnBr" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="20" Color="LightGreen"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


   

    <Style x:Key="menuButton" TargetType="RadioButton">
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="15 0 15 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#f7f6f4"/>
                <Setter Property="Foreground" Value="#fb7657"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#f7f6f4"/>
                <Setter Property="Foreground" Value="#fb7657"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonIcon" TargetType="icon:PackIconMaterial">
        <Setter Property="Margin" Value="25 0 0 0"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>

    </Style>

    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Margin" Value="20 0 0 2 "/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}}}"/>

    </Style>

    <Style x:Key="border" TargetType="Border">
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Padding" Value="20"/>
    </Style>

    <Style x:Key="borderseting" TargetType="Border">
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="CornerRadius" Value="15 15 15 15"/>
        <Setter Property="Padding" Value="0"/>
    </Style>    
    
    <Style x:Key="menuTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="40 30 0 15"/>
    </Style>
    
    <Style x:Key="titleText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="26"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#083353"/>
    </Style>

    <Style x:Key="titleSecoundText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Margin" Value="0 5"/>
        <Setter Property="Foreground" Value="#b7b7b7"/>
    </Style>

    <Style x:Key="searchTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="#f7f6f4"/>
        <Setter Property="Foreground" Value="{DynamicResource FifthTextColor}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Border x:Name="border"
                            CornerRadius="10 0 0 10"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden">
                        </ScrollViewer>
                        
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#d9d9d9"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#d9d9d9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        
    </Style>
    
    <!--label-->
    <Style x:Key="lbunder" TargetType="Label">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" TextDecorations="Underline"
                               Foreground="Red"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ForgotPassword" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="410"/>
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Label  x:Name="B"
                               FontSize="16"
                               Margin="0  0 200 0"
                               FontFamily="send-series"
                               Foreground="{DynamicResource FifthTextColor}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"
                               />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value= "#018AD8"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#018AD8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    <!--Texbox-->
    

    <Style x:Key="text_styl" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Border_skns" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border_skns" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border_skns" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border_skns" Value="Orange"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

</ResourceDictionary>